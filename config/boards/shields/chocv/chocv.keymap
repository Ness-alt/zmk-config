/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>



  / {

    combos {
        compatible = "zmk,combos"; 
        combo_tab {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp TAB>;
         };

          combo_esc {
            timeout-ms = <25>;
            key-positions = <11 12>;
            bindings = <&kp ESC>;
         };
      
         //gui+tab to switch applications on mac
        combo_cmdtab {          
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp LG(TAB)>; 
         };

         //gui+tilde to switch application windows
          combo_tilde {         
            timeout-ms = <50>;
            key-positions = <1 3>;
            bindings = <&kp LG(LS(GRAVE))>;
         };

        combo_ent {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RET>;
         };

        combo_L_ent {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp RET>;
         };

        combo_bspc {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp BSPC>;
        };

        combo_bspc2 {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp BSPC>;
        };
        
        combo_alt_del {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp LA(BSPC)>;
        };

                combo_line_del {
            timeout-ms = <50>;
            key-positions = <5 6>;
            bindings = <&kp LG(BSPC)>;
        };

        combo_quote {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp SQT>;
        };

        combo_rshift {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&sk RSHIFT>;
        };
        

        combo_homerow {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp LS(LG(SPACE))>;
        };
    };

        /*           36 Keys
        ╭──────────────╮ ╭──────────────╮
        │ 0  1  2  3  4│ │ 5  6  7  8  9│
        │10 11 12 13 14│ │15 16 17 18 19│
        │20 21 22 23 24│ │25 26 27 28 29│
        ╰─────╮30 31 32│ │33 34 35╭─────╯
              ╰────────╯ ╰────────╯         */

        //sticky keys for mods example from duckyb https://github.com/duckyb/zmk-sweep/blob/main/config/cradio.keymap
        //&sk LALT &sk LGUI &sk LSHIFT &sk LCTRL &kp RALT


        //
keymap {
                compatible = "zmk,keymap";

                default_layer {
                // -----------------------------------------------------------------------------------------
                // |  Q  |  W  |  E  |  R  |  T   |   |  Y  |  U   |  I  |  O  |  P  |
                // |  A  |  S  |  D  |  F  |  G   |   |  H  |  J   |  K  |  L  |  ;  |
                // |  Z  |  X  |  C  |  V  |  B   |   |  N  |  M   |  ,  |  .  |  /  |
                //             | GUI | NAV | SHFT |   | SPC | SYM  | ALT |
                        bindings = <
        &kp Q        &kp W   &kp E   &kp R   &kp T            &kp Y  &kp U   &kp I           &kp O           &kp P
        &lt 3 A      &kp S   &kp D   &kp F   &kp G            &kp H  &kp J   &kp K           &kp L           &kp SEMI
        &mt LSHIFT Z &kp X   &kp C   &kp V   &kp B            &kp N  &kp M   &kp COMMA       &kp DOT         &mt RSHIFT FSLH
        &mt LCTRL TAB &mt LGUI ESC   &lt 1 SPACE    &lt 2 SPACE   &mt RSHIFT RET   &mt RALT BSPC
                                >; 
                        };

                num_layer {
                // -----------------------------------------------------------------------------------------
                // |BTCLR|     | ESC |  ~   |     |   | TAB | HOME |  UP  | END | DEL  |
                // | BT1 | GUI | ALT | CTRL | NUM |   |  /  | LEFT | DOWN | RGT | BKSP |
                // | BT2 |     |     |      |     |   |  \  | ENT  |      |     |      |
                //             |     |      |     |   |     |      |      |
                        bindings = <
        &kp EXCL        &kp AT  &kp HASH        &kp DLLR       &kp PRCNT   &kp CARET   &kp AMPS        &kp ASTRK        &kp LPAR        &kp RPAR
        &kp N1          &kp N2  &kp N3          &kp N4         &kp N5      &kp N6      &kp N7          &kp N8           &kp N9          &kp N0
        &trans          &trans  &trans          &trans         &trans      &trans   &trans              &kp TILDE         &kp GRAVE        &kp SQT
                        &trans          &trans           &trans      &lt 4 RG(SPACE)     &kp RET         &kp RALT
                        >;
                };

                sym_layer {
                // -----------------------------------------------------------------------------------------
                // |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
                // |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |
                // |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |
                //             | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
        &kp N1  &kp N2  &kp N3    &kp N4   &kp N5      &kp N6      &kp N7    &kp N8      &kp N9     &kp N0
        &kp F1  &kp F2  &kp F3    &kp F4   &kp F5      &kp MINUS   &kp EQUAL &kp LBKT    &kp RBKT   &kp PIPE
        &kp F6  &kp F7  &kp F8    &kp F9   &kp F10     &kp UNDER   &kp PLUS  &kp LBRC    &kp RBRC   &kp BSLH
                        &kp F11   &kp F12        &mo 4  &trans     &trans    &trans  
                        >;
                };

                // This layer is unreachable until "tri layer state" is sorted out.
                // Leaving it here for completeness.
                nav_layer {
                // -----------------------------------------------------------------------------------------
                // |     |     |     |     |     |   |  A  |  7  |  8  |  9  |  D  |
                // |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
                // |     |     |     |     |     |   |  C  |  1  |  2  |  3  |  F  |
                //             |     |     |     |   |  0  |  .  |     |
                        bindings = <
   &trans &trans        &kp UP          &trans          &trans     &kp TAB      &kp HOME    &trans  &kp END         &kp DEL
   &trans &kp LEFT      &kp DOWN        &kp RIGHT       &trans     &kp LEFT     &kp DOWN    &kp UP  &kp RIGHT       &trans
   &trans &trans        &trans          &trans          &trans     &trans       &trans      &trans  &trans          &trans
                        &trans          &trans          &trans     &trans       &trans      &trans
                        >;
                };

                fun_layer {
        // -----------------------------------------------------------------------------------------
        // |     |     |     |     |     |   |  A  |  7  |  8  |  9  |  D  |
        // |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
        // |     |     |     |     |     |   |  C  |  1  |  2  |  3  |  F  |
        //             |     |     |     |   |  0  |  .  |     |
                        bindings = <
   &reset       &bootloader &bt BT_SEL 0  &bt BT_SEL 1  &trans    &trans &trans &trans &trans &trans
   &bt BT_CLR   &trans      &trans        &trans        &trans    &trans &trans &trans &trans &trans
   &trans       &trans      &trans        &trans        &trans    &trans &trans &trans &trans &trans
                &trans      &trans        &trans        &trans    &trans &trans
                        >;
                };

        };
};
